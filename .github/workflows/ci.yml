name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
      - '**/*.md'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-push-docker:
    name: Build and Push Docker
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5001:5000
    env:
      TEST_TAG: localhost:5001/actions/go-git-commit-action:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 10

      - name: Configure Git Safe Directory
        run: git config --global --add safe.directory ${{ github.workspace }}

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Build the Container
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.TEST_TAG }}

      - name: Run the Container
        env:
          OUTPUT_PATH: test/docs
          TEMPLATE_TYPE: readme
          TEMPLATE_NAMES: default,detailed
          FORMAT: markdown
          PROJECT_NAME: Go Docs Generator Action
          GITHUB_REPO: somaz94/go-docs-generator-action
          MARKETPLACE_NAME: Go Docs Generator Action
          MARKETPLACE_SLUG: go-docs-generator-action
          DESCRIPTION: A GitHub Action that generates documentation
          FEATURES: Feature 1,Feature 2,Feature 3
          REQUIREMENTS: Go 1.21 or higher
          INSTALLATION_STEPS: go get github.com/somaz94/go-docs-generator-action
          LANGUAGE: yaml
          LICENSE: MIT
          CONTRIBUTING_MESSAGE: Contributions are welcome!
          CONFIG_OPTIONS: source_path:string:.:Source code path,output_path:string:docs:Output directory
          CONTRIBUTORS: somaz94:Maintainer,john:Developer
          USAGE_EXAMPLE: |
            uses: somaz94/go-docs-generator-action@v1
            with:
              output_path: docs
              template_type: readme
              template_names: default,detailed
              format: markdown
              project_name: 'My Project'
              github_repo: 'username/my-project'
              marketplace_name: 'My Action'
              marketplace_slug: 'my-action'
              description: 'My awesome project'
              features: 'Feature 1,Feature 2,Feature 3'
              requirements: 'Go 1.21 or higher'
              installation_steps: 'go get github.com/somaz94/go-docs-generator-action'
              usage_example: |
                uses: somaz94/go-docs-generator-action@v1
                with:
                  output_path: docs
                  template_type: readme
                  template_names: default,detailed
                  format: markdown
                  project_name: 'My Project'
                  github_repo: 'username/my-project'
                  marketplace_name: 'My Action'
                  marketplace_slug: 'my-action'
        run: |
          docker run \
          --env INPUT_OUTPUT_PATH="${{ env.OUTPUT_PATH }}" \
          --env INPUT_TEMPLATE_TYPE="${{ env.TEMPLATE_TYPE }}" \
          --env INPUT_TEMPLATE_NAMES="${{ env.TEMPLATE_NAMES }}" \
          --env INPUT_FORMAT="${{ env.FORMAT }}" \
          --env INPUT_PROJECT_NAME="${{ env.PROJECT_NAME }}" \
          --env INPUT_GITHUB_REPO="${{ env.GITHUB_REPO }}" \
          --env INPUT_MARKETPLACE_NAME="${{ env.MARKETPLACE_NAME }}" \
          --env INPUT_MARKETPLACE_SLUG="${{ env.MARKETPLACE_SLUG }}" \
          --env INPUT_DESCRIPTION="${{ env.DESCRIPTION }}" \
          --env INPUT_FEATURES="${{ env.FEATURES }}" \
          --env INPUT_REQUIREMENTS="${{ env.REQUIREMENTS }}" \
          --env INPUT_INSTALLATION_STEPS="${{ env.INSTALLATION_STEPS }}" \
          --env INPUT_USAGE_EXAMPLE="${{ env.USAGE_EXAMPLE }}" \
          --env INPUT_LANGUAGE="${{ env.LANGUAGE }}" \
          --env INPUT_LICENSE="${{ env.LICENSE }}" \
          --env INPUT_CONTRIBUTING_MESSAGE="${{ env.CONTRIBUTING_MESSAGE }}" \
          --env INPUT_CONFIG_OPTIONS="${{ env.CONFIG_OPTIONS }}" \
          --env INPUT_CONTRIBUTORS="${{ env.CONTRIBUTORS }}" \
          --volume ${{ github.workspace }}:/app \
          --rm ${{ env.TEST_TAG }}

      - name: Verify Output
        run: |
          echo "üìù Checking generated documentation..."
          
          # Ï∂úÎ†• ÎîîÎ†âÌÜ†Î¶¨ Ï°¥Ïû¨ ÌôïÏù∏
          if [ ! -d "test/docs" ]; then
            echo "‚ùå Output directory not found!"
            exit 1
          fi
          
          # README.md ÌååÏùºÎì§ Ï°¥Ïû¨ ÌôïÏù∏
          for file in "README.md" "README-detailed.md"; do
            if [ ! -f "test/docs/$file" ]; then
              echo "‚ùå $file not generated!"
              exit 1
            fi
            
            # ÌååÏùº ÎÇ¥Ïö© Ï∂úÎ†•
            echo "üìÑ Generated $file content:"
            cat "test/docs/$file"
            
            # ÌååÏùº ÌÅ¨Í∏∞ ÌôïÏù∏
            if [ ! -s "test/docs/$file" ]; then
              echo "‚ùå $file is empty!"
              exit 1
            fi
          done
          
          echo "‚úÖ Documentation generated successfully!"

      # - name: Commit to repository
      #   uses: somaz94/go-git-commit-action@v1
      #   with:
      #     user_email: 'action@github.com'
      #     user_name: 'GitHub Action'
      #     commit_message: 'Update documentation'
      #     branch: 'main'
      #     repository_path: 'test/docs/'
      #     # file_pattern: '.'

  # test-action:
  #   name: Test env-output-setter
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 10

  #     - name: Configure Git Safe Directory
  #       run: git config --global --add safe.directory ${{ github.workspace }}

  #     - name: Test Local Action
  #       uses: ./
  #       with:
  #         output_path: test/docs
  #         template_type: readme
  #         template_names: default,detailed
  #         format: markdown
  #         project_name: Go Docs Generator Action
  #         github_repo: somaz94/go-docs-generator-action
  #         marketplace_name: Go Docs Generator Action
  #         marketplace_slug: go-docs-generator-action
  #         description: A GitHub Action that generates documentation
  #         features: Feature 1,Feature 2,Feature 3
  #         license: MIT
  #         contributing_message: Contributions are welcome!

  #     - name: Verify Action Output
  #       run: |
  #         echo "üìù Checking action output..."
          
  #         # Ï∂úÎ†• ÎîîÎ†âÌÜ†Î¶¨ Ï°¥Ïû¨ ÌôïÏù∏
  #         if [ ! -d "test/docs" ]; then
  #           echo "‚ùå Output directory not found!"
  #           exit 1
  #         fi
          
  #         # README.md ÌååÏùºÎì§ Ï°¥Ïû¨ ÌôïÏù∏
  #         for file in "README.md" "README-detailed.md"; do
  #           if [ ! -f "test/docs/$file" ]; then
  #             echo "‚ùå $file not generated!"
  #             exit 1
  #           fi
            
  #           # ÌååÏùº ÎÇ¥Ïö© Ï∂úÎ†•
  #           echo "üìÑ Generated $file content:"
  #           cat "test/docs/$file"
            
  #           # ÌååÏùº ÌÅ¨Í∏∞ ÌôïÏù∏
  #           if [ ! -s "test/docs/$file" ]; then
  #             echo "‚ùå $file is empty!"
  #             exit 1
  #           fi
  #         done
          
  #         echo "‚úÖ Action completed successfully!"